"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = require("express");
const user_controller_1 = require("../controllers/user.controller");
const auth_middleware_1 = require("../../middleware/auth-middleware");
const common_functions_1 = require("../../utils/common-functions");
const router = (0, express_1.Router)();
router.get("/", (0, auth_middleware_1.authenticateToken)(common_functions_1.adminRoles), user_controller_1.listUsers);
router.post("/create-user", (0, auth_middleware_1.authenticateToken)(common_functions_1.adminRoles), user_controller_1.createUserController);
router.put("/:id", (0, auth_middleware_1.authenticateToken)(common_functions_1.adminRoles), user_controller_1.updateUserController);
router.patch("/profile", (0, auth_middleware_1.authenticateToken)(common_functions_1.allRoles), user_controller_1.updateProfile);
router.patch("/profile/password", (0, auth_middleware_1.authenticateToken)(common_functions_1.allRoles), user_controller_1.updatePassword);
router.post("/:id/reset-password", (0, auth_middleware_1.authenticateToken)(common_functions_1.adminRoles), user_controller_1.resetPassword);
router.put("/:id/activate", (0, auth_middleware_1.authenticateToken)(common_functions_1.adminRoles), user_controller_1.toggleUserStatusController);
router.delete("/:id", (0, auth_middleware_1.authenticateToken)(common_functions_1.adminRoles), user_controller_1.deleteUserController);
router.get("/get-loggedin-user", (0, auth_middleware_1.authenticateToken)(common_functions_1.allRoles), user_controller_1.getLoggedInUser);
router.get("/:id", (0, auth_middleware_1.authenticateToken)(common_functions_1.adminRoles), user_controller_1.getUserController);
exports.default = router;
